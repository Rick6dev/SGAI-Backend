image: 10.134.0.252:4443/ccrnodes

stages:
  - install
  - registerDev
  - registerQa
  - registerPro
  - deployDev
  - deployQa
  - deployPro

variables:
  GIT_STRATEGY: clone

install:
  stage: install
  script:
    - npm config set proxy http://10.132.0.10:8080
    - npm config set strict-ssl false
    - npm install
  tags:
    - docker
  artifacts:
    expire_in: 1h
    paths:
      - node_modules/
  cache:
    paths:
      - node_modules/

registerDev:
  stage: registerDev
  dependencies:
    - install
  script:
    - sudo docker build -t $CI_PROJECT_NAME$CI_PIPELINE_ID .
    - sudo docker image tag $CI_PROJECT_NAME$CI_PIPELINE_ID $REPO_DEV$CI_PROJECT_NAME$CI_PIPELINE_ID
    - sudo docker push $REPO_DEV$CI_PROJECT_NAME$CI_PIPELINE_ID
  tags:
    - shell
  only:
    - develop

deployDev:
  stage: deployDev
  dependencies:
    - registerDev
  script:
    - ssh -t -t $USER@$HOSTMASTER "sudo sh /usr/local/bin/service_script.sh 31981"
    - ssh -t -t $USER@$HOSTMASTER "sudo kubectl create deployment $CI_PROJECT_NAME$CI_PIPELINE_ID --image=$REPO_DEV$CI_PROJECT_NAME$CI_PIPELINE_ID"
    - ssh -t -t $USER@$HOSTMASTER "sudo kubectl create service nodeport $CI_PROJECT_NAME$CI_PIPELINE_ID --tcp=$PORT_APP:$PORT_APP --node-port=$PORT_KUBERNETES"
  tags:
    - shell
  only:
    - develop

registerQa:
  stage: registerQa
  dependencies:
    - install
  script:
    - sudo docker build -t $CI_PROJECT_NAME$CI_PIPELINE_ID .
    - sudo docker image tag $CI_PROJECT_NAME$CI_PIPELINE_ID $REPO_QA$CI_PROJECT_NAME$CI_PIPELINE_ID
    - sudo docker push $REPO_QA$CI_PROJECT_NAME$CI_PIPELINE_ID
  tags:
    - shell
  only:
    - qa

deployQa:
  stage: deployQa
  dependencies:
    - registerQa
  script:
    - ssh -t -t $USER@$HOSTMASTERQA "sudo sh /home/jsuarez/service_script.sh 31981"
    - ssh -t -t $USER@$HOSTMASTERQA "sudo kubectl create deployment $CI_PROJECT_NAME$CI_PIPELINE_ID --image=$REPO_QA$CI_PROJECT_NAME$CI_PIPELINE_ID"
    - ssh -t -t $USER@$HOSTMASTERQA "sudo kubectl create service nodeport $CI_PROJECT_NAME$CI_PIPELINE_ID --tcp=$PORT_APP:$PORT_APP --node-port=$PORT_KUBERNETES"
  tags:
    - shell
  only:
    - qa

registerPro:
  stage: registerPro
  dependencies:
    - install
  script:
    - sudo docker build -t $CI_PROJECT_NAME$CI_PIPELINE_ID .
    - sudo docker image tag $CI_PROJECT_NAME$CI_PIPELINE_ID $REPO_PROD$CI_PROJECT_NAME$CI_PIPELINE_ID
    - sudo docker push $REPO_PROD$CI_PROJECT_NAME$CI_PIPELINE_ID
  tags:
    - shell
  only:
    - master

deployProd:
  stage: deployPro
  dependencies:
    - registerPro
  script:
    - ssh -t -t $USER@$HOSTMASTERQA "sudo sh /home/jsuarez/service_script.sh 31981"
    - ssh -t -t $USER@$HOSTMASTERQA "sudo kubectl create deployment $CI_PROJECT_NAME$CI_PIPELINE_ID --image=$REPO_PROD$CI_PROJECT_NAME$CI_PIPELINE_ID"
    - ssh -t -t $USER@$HOSTMASTERQA "sudo kubectl create service nodeport $CI_PROJECT_NAME$CI_PIPELINE_ID --tcp=$PORT_APP:$PORT_APP --node-port=$PORT_KUBERNETES"
  tags:
    - shell
  only:
    - master
